# Generated by Selenium IDE
import pytzest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestRobottest():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_robottest(self):
    # Test name: Robottest
    # Step # | name | target | value | comment
    # 1 | open | https://demoqa.com/automation-practice-form |  | 
    self.driver.get("https://demoqa.com/automation-practice-form")
    # 2 | setWindowSize | 1382x784 |  | 
    self.driver.set_window_size(1382, 784)
    # 3 | click | id=firstName |  | 
    self.driver.find_element(By.ID, "firstName").click()
    # 4 | type | id=firstName | QA Demais | 
    self.driver.find_element(By.ID, "firstName").send_keys("QA Demais")
    # 5 | type | id=lastName | Dos Demais | 
    self.driver.find_element(By.ID, "lastName").send_keys("Dos Demais")
    # 6 | type | id=userEmail | demaisQA@futurocontratado.com | 
    self.driver.find_element(By.ID, "userEmail").send_keys("demaisQA@futurocontratado.com")
    # 7 | click | id=gender-radio-1 |  | 
    self.driver.find_element(By.ID, "gender-radio-1").click()
    # 8 | click | id=userNumber |  | 
    self.driver.find_element(By.ID, "userNumber").click()
    # 9 | type | id=userNumber | 1114546656 | 
    self.driver.find_element(By.ID, "userNumber").send_keys("1114546656")
    # 10 | click | css=.subjects-auto-complete__value-container |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".subjects-auto-complete__value-container").click()
    # 11 | click | id=dateOfBirthInput |  | 
    self.driver.find_element(By.ID, "dateOfBirthInput").click()
    # 12 | click | css=.react-datepicker__year-select |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".react-datepicker__year-select").click()
    # 13 | select | css=.react-datepicker__year-select | label=1965 | 
    dropdown = self.driver.find_element(By.CSS_SELECTOR, ".react-datepicker__year-select")
    dropdown.find_element(By.XPATH, "//option[. = '1965']").click()
    # 14 | click | css=.react-datepicker__day--026:nth-child(4) |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".react-datepicker__day--026:nth-child(4)").click()
    # 15 | click | css=.subjects-auto-complete__value-container |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".subjects-auto-complete__value-container").click()
    # 16 | click | css=.subjects-auto-complete__value-container |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".subjects-auto-complete__value-container").click()
    # 17 | type | id=subjectsInput | Computer Science | 
    self.driver.find_element(By.ID, "subjectsInput").send_keys("Computer Science")
    # 18 | sendKeys | id=subjectsInput | ${KEY_ENTER} | 
    self.driver.find_element(By.ID, "subjectsInput").send_keys(Keys.ENTER)
    # 19 | click | id=hobbies-checkbox-1 |  | 
    self.driver.find_element(By.ID, "hobbies-checkbox-1").click()
    # 20 | click | id=hobbies-checkbox-2 |  | 
    self.driver.find_element(By.ID, "hobbies-checkbox-2").click()
    # 21 | click | id=hobbies-checkbox-3 |  | 
    self.driver.find_element(By.ID, "hobbies-checkbox-3").click()
    # 22 | type | id=currentAddress | Rua Jaçanã 347 Zona Norte dos QA | 
    self.driver.find_element(By.ID, "currentAddress").send_keys("Rua Jaçanã 347 Zona Norte dos QA")
    # 23 | runScript | window.scrollTo(0,191) |  | 
    self.driver.execute_script("window.scrollTo(0,191)")
    # 24 | click | id=state |  | 
    self.driver.find_element(By.ID, "state").click()
    # 25 | click | id=state |  | 
    self.driver.find_element(By.ID, "state").click()
    # 26 | type | id=react-select-3-input | NCR | 
    self.driver.find_element(By.ID, "react-select-3-input").send_keys("NCR")
    # 27 | click | id=state |  | 
    self.driver.find_element(By.ID, "state").click()
    # 28 | click | id=userForm |  | 
    self.driver.find_element(By.ID, "userForm").click()
    # 29 | click | id=state |  | 
    self.driver.find_element(By.ID, "state").click()
    # 30 | type | id=react-select-3-input | NCR | 
    self.driver.find_element(By.ID, "react-select-3-input").send_keys("NCR")
    # 31 | sendKeys | id=react-select-3-input | ${KEY_ENTER} | 
    self.driver.find_element(By.ID, "react-select-3-input").send_keys(Keys.ENTER)
    # 32 | mouseDown | css=.css-1wa3eu0-placeholder |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".css-1wa3eu0-placeholder")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 33 | mouseUp | id=react-select-4-option-1 |  | 
    element = self.driver.find_element(By.ID, "react-select-4-option-1")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 34 | click | id=city |  | 
    self.driver.find_element(By.ID, "city").click()
    # 35 | type | id=react-select-4-input | Delhi | 
    self.driver.find_element(By.ID, "react-select-4-input").send_keys("Delhi")
    # 36 | sendKeys | id=react-select-4-input | ${KEY_ENTER} | 
    self.driver.find_element(By.ID, "react-select-4-input").send_keys(Keys.ENTER)
    # 37 | click | id=submit |  | 
    self.driver.find_element(By.ID, "submit").click()
  
